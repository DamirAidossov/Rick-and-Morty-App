{"version":3,"sources":["components/charCardMin.js","components/paginationModule.js","components/filterBar.js","components/modal.js","index.js"],"names":["CharCardMin","props","className","value","name","src","image","alt","onClick","e","openModal","id","status","species","hidden","type","gender","PaginationModule","lastPage","parseInt","currPage","arr","i","push","map","pages","disabled","changePage","FilterBar","useState","undefined","setStatus","setSpecies","setGender","setType","setName","changed","setChanged","handleChange","key","preventDefault","data","target","onChange","changeFilter","CharModal","display","setDisplay","useEffect","modalState","btn_class","setModalState","char","origin","location","NavBar","newFilter","MainScreen","charInfo","setCharInfo","fetch","then","response","json","cards","length","App","setCurrPage","setlastPage","setCards","watcher","setWatcher","getLink","newPage","link","error","info","results","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6acde818.chunk.js","sourcesContent":["import React from 'react';\r\nexport {CharCardMin}\r\nfunction CharCardMin(props) { //Component to render character short info in main window  \r\n    return(\r\n        <div className=\"charCard\">\r\n            <p>Name: <b>{props.value.name}</b></p>\r\n            {/* onClick action on image to open modal popup window with full character info*/}\r\n            <img src={props.value.image} alt=\"\" onClick={(e) => {props.openModal(e, props.value.id)}}></img>\r\n            <p>Status: {props.value.status}</p>\r\n            <p>Species: {props.value.species}</p>\r\n            <p hidden={!props.value.type}>Type: {props.value.type}</p>\r\n            <p>Gender: {props.value.gender}</p>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n","import React from 'react';\r\n\r\n//component to render pagination bar in the bottom of the app\r\nfunction PaginationModule(props){\r\n    let lastPage = parseInt(props.lastPage)\r\n    let currPage = parseInt(props.currPage)\r\n    if(lastPage <= 5){  //if there are 5 pages or less rendering pages without buttons \"First\",\"Last\",\"Prev\",\"Next\"\r\n        let arr=[]\r\n        for(let i=1 ; i<lastPage+1 ; i++){\r\n            arr.push(i)\r\n        }\r\n        return(\r\n            <div className=\"centered\">\r\n                <div className=\"pagination\" >\r\n                    {arr.map((pages) =>\r\n                    <button className={currPage===pages? \"active\" : \"\"} disabled={currPage===pages} key={pages} onClick={(e) => {props.changePage(parseInt(pages), e)}} > {pages}</button>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        );\r\n    } else if(currPage === 1){ \r\n        //if current page is first render pagination bar with disabled button \"first\",\"prev\"\r\n        return (\r\n            <div className=\"centered\">\r\n                <div className=\"pagination\">\r\n                    <button disabled={true}>First</button>\r\n                    <button disabled={true} >Prev.</button>\r\n                    <button className=\"active\" disabled={true}>{currPage}</button>\r\n                    <button onClick={(e) => {props.changePage(currPage+1, e)}}>{currPage+1}</button>\r\n                    <button onClick={(e) => {props.changePage(currPage+2, e)}}>{currPage+2}</button>\r\n                    <span>...</span>\r\n                    <button onClick={(e) => {props.changePage(lastPage, e)}}>{lastPage}</button>\r\n                    <button onClick={(e) => {props.changePage(currPage+1, e)}} >Next</button>\r\n                    <button onClick={(e) => {props.changePage(lastPage, e)}}>Last</button>\r\n                </div>\r\n            </div>\r\n        )\r\n    } else if(currPage > 1 && currPage < (lastPage - 1)){\r\n        //pagination bar with pages displayed depending on current page\r\n        return (\r\n            <div className=\"centered\">\r\n                <div className=\"pagination\">\r\n                    <button onClick={(e) => {props.changePage(1, e)}}>First</button>\r\n                    <button onClick={(e) => {props.changePage(currPage-1, e)}} >Prev.</button>\r\n                    <button onClick={(e) => {props.changePage(currPage-1, e)}}>{currPage-1}</button>\r\n                    <button className=\"active\" disabled={true}>{currPage}</button>\r\n                    <button onClick={(e) => {props.changePage(currPage+1, e)}}>{currPage+1}</button>\r\n                    <span>...</span>\r\n                    <button onClick={(e) => {props.changePage(lastPage, e)}} >{lastPage}</button>\r\n                    <button onClick={(e) => {props.changePage(currPage+1, e)}} >Next</button>\r\n                    <button onClick={(e) => {props.changePage(lastPage, e)}}>Last</button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }  else if(currPage === lastPage - 1){\r\n        //if current page is last but one pagination bar will render without 3 dots span\r\n        return (\r\n            <div className=\"centered\">\r\n                <div className=\"pagination\">\r\n                    <button onClick={(e) => {props.changePage(1, e)}}>First</button>\r\n                    <button onClick={(e) => {props.changePage(currPage-1, e)}} >Prev.</button>\r\n                    <button onClick={(e) => {props.changePage(currPage-1, e)}}>{currPage-1}</button>\r\n                    <button className=\"active\" disabled={true}>{currPage}</button>\r\n                    <button onClick={(e) => {props.changePage(currPage+1, e)}}>{currPage+1}</button>\r\n                    <button onClick={(e) => {props.changePage(currPage+1, e)}} >Next</button>\r\n                    <button onClick={(e) => {props.changePage(lastPage, e)}}>Last</button>\r\n                </div>\r\n            </div>\r\n        )\r\n    } else if(currPage === lastPage){\r\n        //if current page is last render pagination bar with disabled button \"Next\",\"Last\"\r\n        return (\r\n            <div className=\"centered\">\r\n                <div className=\"pagination\">\r\n                    <button onClick={(e) => {props.changePage(1, e)}}>First</button>\r\n                    <button onClick={(e) => {props.changePage(currPage-1, e)}} >Prev.</button>\r\n                    <button onClick={(e) => {props.changePage(currPage-2, e)}}>{currPage-2}</button>\r\n                    <button onClick={(e) => {props.changePage(currPage-1, e)}}>{currPage-1}</button>\r\n                    <button className=\"active\" disabled={true}>{currPage}</button>\r\n                    <button disabled={true}>Next</button>\r\n                    <button disabled={true}>Last</button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport {PaginationModule};","import React, {useState} from 'react';\r\nexport {FilterBar};\r\n\r\n\r\nfunction FilterBar (props){   //Component with all inputs to filter data\r\n    const [status, setStatus] = useState(undefined)\r\n    const [species, setSpecies] = useState(undefined)\r\n    const [gender, setGender] = useState(undefined)\r\n    const [type, setType] = useState(undefined)\r\n    const [name, setName] = useState(undefined)\r\n    const [changed, setChanged] = useState(false)\r\n    \r\n    function handleChange(e, key){ //function to either set state from user input or set to undefined if deleted\r\n        e.preventDefault();\r\n        let data = {}\r\n        if(e.target.value !== ''){\r\n            data[key] = e.target.value;\r\n        } else {\r\n            data[key] = undefined;\r\n        }\r\n        switch (key) {\r\n            case 'status':\r\n                setStatus(data[key])\r\n                break;\r\n            case 'species':\r\n                setSpecies(data[key])\r\n                break;\r\n            case 'gender':\r\n                setGender(data[key])\r\n                break;\r\n            case 'type':\r\n                setType(data[key])\r\n                break;\r\n            case 'name':\r\n                setName(data[key])\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        setChanged(true)\r\n    }\r\n\r\n    return(\r\n        <div className=\"filterContainer flex-row\">\r\n            <div className=\"group\">\r\n                {/*text input for name value*/}\r\n                <input type=\"text\" value={name !== undefined ? name : ''} onChange={(e) => {handleChange(e, 'name')}} ></input>\r\n                <span className=\"highlight\"></span>\r\n                <span className=\"bar\"></span>\r\n                <label>Name</label>\r\n            </div>\r\n            <div className=\"group\">\r\n                {/*text input for species value*/}\r\n                <input type=\"text\" value={species !== undefined ? species : ''} onChange={(e) => {handleChange(e, 'species')}} />\r\n                <span className=\"highlight\"></span>\r\n                <span className=\"bar\"></span>\r\n                <label>Species</label>\r\n            </div>\r\n            <div className=\"group\">\r\n                {/*text input for type value*/}\r\n                <input type=\"text\" value={type !== undefined ? type : ''} onChange={(e) => {handleChange(e, 'type')}} />\r\n                <span className=\"highlight\"></span>\r\n                <span className=\"bar\"></span>\r\n                <label>Type</label>\r\n            </div>\r\n            <div className=\"group\">\r\n                {/*select input for gender value*/}\r\n                <label className=\"selectLabel\" >Gender</label>\r\n                <select className=\"selectInput\" value={gender !== undefined ? gender : ''} onChange={(e) => {handleChange(e, 'gender')}}>\r\n                    <option value=\"Female\">Female</option>\r\n                    <option value=\"Male\">Male</option>\r\n                    <option value=\"Genderless\">Genderless</option>\r\n                    <option value=\"unknown\">unknown</option>\r\n                    <option value=\"\">Any</option>\r\n                </select>\r\n                <span className=\"highlight\"></span>\r\n                <span className=\"bar\"></span>\r\n                \r\n            </div>\r\n            <div className=\"group\">\r\n                {/*select input for status value*/}\r\n                <label className=\"selectLabel\" >Status</label>\r\n                <select className=\"selectInput\" value={status !== undefined ? status : ''} onChange={(e) => {handleChange(e, 'status')}}>\r\n                    <option value=\"Alive\">Alive</option>\r\n                    <option value=\"Dead\">Dead</option>\r\n                    <option value=\"unknown\">unknown</option>\r\n                    <option value=\"\">Any</option>\r\n                </select>\r\n                <span className=\"highlight\"></span>\r\n                <span className=\"bar\"></span>\r\n                \r\n            </div>\r\n            {/*button to apply filter settings and send request to rickAndMortyAPI */}\r\n            <button className=\"buttonApply\" disabled={!changed} onClick={(e) => {props.changeFilter({status:status, species:species, gender:gender, type:type, name:name, changed:changed}, e); setChanged(false)}} >Apply</button>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React, {useState, useEffect} from 'react';\r\nexport {CharModal} \r\n\r\nfunction CharModal (props) { //Modal popup window with full charachter info\r\n    const [display, setDisplay] = useState(false)\r\n\r\n    useEffect(() => {\r\n        if(props.modalState === true && display===false){\r\n            setDisplay(true);\r\n        } else if(display===true && props.modalState === false) {\r\n            setDisplay(false);\r\n        }\r\n    }, [display, props]);\r\n\r\n    function hideModal(){\r\n        props.setModalState(false)\r\n    }\r\n\r\n    let btn_class = display ? \"modal-show modal\" : \"modal-hide modal\";\r\n    return (\r\n        <div className={btn_class}>\r\n            <div className=\"modal-content\">\r\n                <div className=\"modal-header\">\r\n                    <span className=\"close\" onClick={hideModal} >&times;</span>\r\n                    <h2>{props.char.name}</h2>\r\n                </div>\r\n                <div className=\"modal-body\">\r\n                    <img src={props.char.image} alt=\"\"></img>\r\n                    <p>Status: {props.char.status}</p>\r\n                    <p>Species: {props.char.species}</p>\r\n                    <p>Type: {props.char.type}</p>\r\n                    <p>Gender: {props.char.gender}</p>\r\n                    <p>Origin: {props.char.origin? props.char.origin.name : \"\"}</p>\r\n                    <p>Location: {props.char.location? props.char.location.name : \"\"}</p>\r\n                </div>\r\n                <div className=\"modal-footer\">\r\n                </div>\r\n            </div>  \r\n        </div>\r\n    );\r\n}\r\n\r\n  \r\n  ","/* eslint-disable react-hooks/exhaustive-deps */\r\n\r\nimport React , {useState, useEffect}  from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport {CharCardMin} from './components/charCardMin.js'\r\nimport {PaginationModule} from './components/paginationModule.js'\r\nimport {FilterBar} from './components/filterBar.js' \r\nimport {CharModal} from './components/modal.js'\r\n\r\n\r\n\r\n//component for navigation bar on top of the screen with title and filter bar\r\nfunction NavBar(props){ \r\n  function changeFilter(newFilter, e){\r\n    e.preventDefault();\r\n    props.changeFilter(newFilter, e)\r\n  }\r\n  return (\r\n    <div className=\"flex-row navContainer\">\r\n        <div className=\"projectTitle\">Rick and Morty Characters List</div>\r\n        <FilterBar changeFilter = {changeFilter} className=\"filterContainer\" />\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction MainScreen(props){ //main block of app with characters list\r\n    const [charInfo, setCharInfo] = useState({})\r\n    const [modalState, setModalState] = useState(false)\r\n\r\n    function openModal(e, id){//on image click send request to api with character id and opens character popup modal window\r\n      e.preventDefault();\r\n      \r\n      fetch('https://rickandmortyapi.com/api/character/'+id)\r\n        .then(response => response.json())\r\n        .then(data => {\r\n          setCharInfo(data)\r\n          setModalState(true)\r\n        }); \r\n    }\r\n\r\n    const cards = props.cards;\r\n    \r\n    if(cards.length){\r\n      return (\r\n        <div className=\"cardsContainer\" >\r\n          {cards.map((char) => //creating list of cards\r\n            <CharCardMin openModal={openModal} key={char.id} value={char} />\r\n          )}\r\n          {/* Hidden Modal window */}\r\n          <CharModal modalState={modalState} setModalState={setModalState} openModal={openModal} char={charInfo}/>\r\n        </div>\r\n      );\r\n    } else{\r\n      //render text if there is no data found on query\r\n      return(\r\n        <div className=\"cardsContainerNoData\" >\r\n          <p className=\"notFound\">{\"Characters not found :(\"}</p>\r\n        </div>\r\n      );\r\n    }\r\n    \r\n}\r\n\r\nfunction App (props){ //Main component which renders to root element\r\n    const [status, setStatus] = useState(undefined)\r\n    const [species, setSpecies] = useState(undefined)\r\n    const [gender, setGender] = useState(undefined)\r\n    const [type, setType] = useState(undefined)\r\n    const [name, setName] = useState(undefined)\r\n    const [currPage, setCurrPage] = useState(1)\r\n    const [lastPage, setlastPage] = useState(props.lastPage)\r\n    const [cards, setCards] = useState(props.cards)\r\n    const [watcher, setWatcher] = useState(false)\r\n    \r\n    useEffect(() => {\r\n      if (watcher === true) {\r\n        setWatcher(false)\r\n          getLink(currPage)\r\n      } \r\n    },[watcher, getLink, currPage]);\r\n    //when page clicked on pagination bar this function called\r\n    function changePage(newPage,e) {\r\n      e.preventDefault();\r\n      if(newPage !== currPage){\r\n        getLink(newPage)\r\n      }\r\n    }\r\n    //when filter applied this function called\r\n    function changeFilter(newFilter, e){\r\n      e.preventDefault();\r\n      setStatus(newFilter['status']);\r\n      setSpecies(newFilter['species']);\r\n      setGender(newFilter['gender']);\r\n      setType(newFilter['type']);\r\n      setName(newFilter['name']);\r\n      setCurrPage(1)\r\n      setWatcher(true)\r\n      \r\n      \r\n    }\r\n    //after filter applied or page chosen send request to rick and morty api and render character cards\r\n    function getLink(newPage){\r\n      let link = 'https://rickandmortyapi.com/api/character/?page='+newPage\r\n      if(status){\r\n        link=link +'&status='+status\r\n      }\r\n      if(species){\r\n        link= link +'&species='+species\r\n      }\r\n      if(gender){\r\n        link= link +'&gender='+gender\r\n      }\r\n      if(type){\r\n        link= link +'&type='+type\r\n      }\r\n      if(name){\r\n        link= link +'&name='+name\r\n      }\r\n        fetch(link)\r\n        .then(response => response.json())\r\n        .then(data => {\r\n          if(!data.error){\r\n            setCurrPage(newPage)\r\n            setlastPage(data.info.pages)\r\n            setCards(data.results)\r\n          } else {\r\n            setCurrPage(1)\r\n            setlastPage(1)\r\n            setCards([])\r\n          }\r\n        }); \r\n    }\r\n    \r\n    \r\n    return (\r\n      <div className=\"appContainer\">\r\n          <NavBar changeFilter = {changeFilter} />\r\n          <MainScreen className=\"mainContainer\" cards={cards} currPage={currPage} />\r\n          <PaginationModule changePage = {changePage} lastPage={lastPage} currPage={currPage} />\r\n      </div>\r\n    );\r\n    \r\n    \r\n}\r\n\r\n//initial request to api to get first page of characters and mount react app to root element\r\nfetch('https://rickandmortyapi.com/api/character/?page=1')\r\n        .then(response => response.json())\r\n        .then(data => {\r\n          ReactDOM.render(\r\n            <App cards={data.results} lastPage={data.info.pages}/>,\r\n            document.getElementById('root')\r\n          );\r\n        });  \r\n\r\n  "],"sourceRoot":""}