{"version":3,"sources":["components/charCardMin.js","components/paginationModule.js","components/filterBar.js","components/modal.js","index.js"],"names":["CharCardMin","className","this","props","value","name","src","image","alt","onClick","e","openModal","id","status","species","hidden","type","gender","React","Component","PaginationModule","lastPage","parseInt","currPage","arr","i","push","map","pages","disabled","changePage","FilterBar","state","undefined","changed","handleChange","bind","key","preventDefault","data","target","setState","onChange","changeFilter","CharModal","display","modalOpen","modalClose","btn_class","char","origin","location","NavBar","newFilter","MainScreen","charModalElement","createRef","charInfo","fetch","then","response","json","current","cards","length","ref","App","getLink","newPage","console","log","link","error","results","info","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.81f5ad35.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nclass CharCardMin extends React.Component { //Component to render character short info in main window  \r\n    render(){\r\n        return(\r\n            <div className=\"charCard\">\r\n                <p>Name: <b>{this.props.value.name}</b></p>\r\n                {/* onClick action on image to open modal popup window with full character info*/}\r\n                <img src={this.props.value.image} alt=\"\" onClick={(e) => {this.props.openModal(e, this.props.value.id)}}></img>\r\n                <p>Status: {this.props.value.status}</p>\r\n                <p>Species: {this.props.value.species}</p>\r\n                <p hidden={!this.props.value.type}>Type: {this.props.value.type}</p>\r\n                <p>Gender: {this.props.value.gender}</p>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport {CharCardMin}","import React from 'react';\r\n\r\n//component to render pagination bar in the bottom of the app\r\nclass PaginationModule extends React.Component {\r\n    render(){\r\n        let lastPage = parseInt(this.props.lastPage)\r\n        let currPage = parseInt(this.props.currPage)\r\n        if(lastPage <= 5){  //if there are 5 pages or less rendering pages without buttons \"First\",\"Last\",\"Prev\",\"Next\"\r\n            let arr=[]\r\n            for(let i=1 ; i<lastPage+1 ; i++){\r\n                arr.push(i)\r\n            }\r\n            return(\r\n                <div className=\"centered\">\r\n                    <div className=\"pagination\" >\r\n                        {arr.map((pages) =>\r\n                        <button className={currPage===pages? \"active\" : \"\"} disabled={currPage===pages} key={pages} onClick={(e) => {this.props.changePage(parseInt(pages), e)}} > {pages}</button>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            );\r\n        } else if(currPage === 1){ \r\n            //if current page is first render pagination bar with disabled button \"first\",\"prev\"\r\n            return (\r\n                <div className=\"centered\">\r\n                    <div className=\"pagination\">\r\n                        <button disabled={true}>First</button>\r\n                        <button disabled={true} >Prev.</button>\r\n                        <button className=\"active\" disabled={true}>{currPage}</button>\r\n                        <button onClick={(e) => {this.props.changePage(currPage+1, e)}}>{currPage+1}</button>\r\n                        <button onClick={(e) => {this.props.changePage(currPage+2, e)}}>{currPage+2}</button>\r\n                        <span>...</span>\r\n                        <button onClick={(e) => {this.props.changePage(lastPage, e)}}>{lastPage}</button>\r\n                        <button onClick={(e) => {this.props.changePage(currPage+1, e)}} >Next</button>\r\n                        <button onClick={(e) => {this.props.changePage(lastPage, e)}}>Last</button>\r\n                    </div>\r\n                </div>\r\n            )\r\n        } else if(currPage > 1 && currPage < (lastPage - 1)){\r\n            //pagination bar with pages displayed depending on current page\r\n            return (\r\n                <div className=\"centered\">\r\n                    <div className=\"pagination\">\r\n                        <button onClick={(e) => {this.props.changePage(1, e)}}>First</button>\r\n                        <button onClick={(e) => {this.props.changePage(currPage-1, e)}} >Prev.</button>\r\n                        <button onClick={(e) => {this.props.changePage(currPage-1, e)}}>{currPage-1}</button>\r\n                        <button className=\"active\" disabled={true}>{currPage}</button>\r\n                        <button onClick={(e) => {this.props.changePage(currPage+1, e)}}>{currPage+1}</button>\r\n                        <span>...</span>\r\n                        <button onClick={(e) => {this.props.changePage(lastPage, e)}} >{lastPage}</button>\r\n                        <button onClick={(e) => {this.props.changePage(currPage+1, e)}} >Next</button>\r\n                        <button onClick={(e) => {this.props.changePage(lastPage, e)}}>Last</button>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }  else if(currPage === lastPage - 1){\r\n            //if current page is last but one pagination bar will render without 3 dots span\r\n            return (\r\n                <div className=\"centered\">\r\n                    <div className=\"pagination\">\r\n                        <button onClick={(e) => {this.props.changePage(1, e)}}>First</button>\r\n                        <button onClick={(e) => {this.props.changePage(currPage-1, e)}} >Prev.</button>\r\n                        <button onClick={(e) => {this.props.changePage(currPage-1, e)}}>{currPage-1}</button>\r\n                        <button className=\"active\" disabled={true}>{currPage}</button>\r\n                        <button onClick={(e) => {this.props.changePage(currPage+1, e)}}>{currPage+1}</button>\r\n                        <button onClick={(e) => {this.props.changePage(currPage+1, e)}} >Next</button>\r\n                        <button onClick={(e) => {this.props.changePage(lastPage, e)}}>Last</button>\r\n                    </div>\r\n                </div>\r\n            )\r\n        } else if(currPage === lastPage){\r\n            //if current page is last render pagination bar with disabled button \"Next\",\"Last\"\r\n            return (\r\n                <div className=\"centered\">\r\n                    <div className=\"pagination\">\r\n                        <button onClick={(e) => {this.props.changePage(1, e)}}>First</button>\r\n                        <button onClick={(e) => {this.props.changePage(currPage-1, e)}} >Prev.</button>\r\n                        <button onClick={(e) => {this.props.changePage(currPage-2, e)}}>{currPage-2}</button>\r\n                        <button onClick={(e) => {this.props.changePage(currPage-1, e)}}>{currPage-1}</button>\r\n                        <button className=\"active\" disabled={true}>{currPage}</button>\r\n                        <button disabled={true}>Next</button>\r\n                        <button disabled={true}>Last</button>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport {PaginationModule};","import React from 'react';\r\n\r\n\r\n\r\nclass FilterBar extends React.Component {   //Component with all inputs to filter data\r\n    constructor(props) {\r\n    super(props);\r\n        this.state = {//state for filter info, all filters are set to undefined until user apply them\r\n            status: undefined,\r\n            species: undefined,\r\n            gender: undefined,\r\n            type: undefined,\r\n            name: undefined,\r\n            changed: false\r\n        };\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n    handleChange(e, key){ //function to either set state from user input or set to undefined if deleted\r\n        e.preventDefault();\r\n        let data = {}\r\n        if(e.target.value !== ''){\r\n            data[key] = e.target.value;\r\n        } else {\r\n            data[key] = undefined;\r\n        }\r\n        \r\n        data['changed'] = true\r\n        this.setState(data)\r\n    }\r\n    render(){\r\n        return(\r\n            <div className=\"filterContainer flex-row\">\r\n                <div className=\"group\">\r\n                    {/*text input for name value*/}\r\n                    <input type=\"text\" value={this.state.name !== undefined ? this.state.name : ''} onChange={(e) => {this.handleChange(e, 'name')}} ></input>\r\n                    <span className=\"highlight\"></span>\r\n                    <span className=\"bar\"></span>\r\n                    <label>Name</label>\r\n                </div>\r\n                <div className=\"group\">\r\n                    {/*text input for species value*/}\r\n                    <input type=\"text\" value={this.state.species !== undefined ? this.state.species : ''} onChange={(e) => {this.handleChange(e, 'species')}} />\r\n                    <span className=\"highlight\"></span>\r\n                    <span className=\"bar\"></span>\r\n                    <label>Species</label>\r\n                </div>\r\n                <div className=\"group\">\r\n                    {/*text input for type value*/}\r\n                    <input type=\"text\" value={this.state.type !== undefined ? this.state.type : ''} onChange={(e) => {this.handleChange(e, 'type')}} />\r\n                    <span className=\"highlight\"></span>\r\n                    <span className=\"bar\"></span>\r\n                    <label>Type</label>\r\n                </div>\r\n                <div className=\"group\">\r\n                    {/*select input for gender value*/}\r\n                    <label className=\"selectLabel\" >Gender</label>\r\n                    <select className=\"selectInput\" value={this.state.gender !== undefined ? this.state.gender : ''} onChange={(e) => {this.handleChange(e, 'gender')}}>\r\n                        <option value=\"Female\">Female</option>\r\n                        <option value=\"Male\">Male</option>\r\n                        <option value=\"Genderless\">Genderless</option>\r\n                        <option value=\"unknown\">unknown</option>\r\n                        <option value=\"\">Any</option>\r\n                    </select>\r\n                    <span className=\"highlight\"></span>\r\n                    <span className=\"bar\"></span>\r\n                    \r\n                </div>\r\n                <div className=\"group\">\r\n                    {/*select input for status value*/}\r\n                    <label className=\"selectLabel\" >Status</label>\r\n                    <select className=\"selectInput\" value={this.state.status !== undefined ? this.state.status : ''} onChange={(e) => {this.handleChange(e, 'status')}}>\r\n                        <option value=\"Alive\">Alive</option>\r\n                        <option value=\"Dead\">Dead</option>\r\n                        <option value=\"unknown\">unknown</option>\r\n                        <option value=\"\">Any</option>\r\n                    </select>\r\n                    <span className=\"highlight\"></span>\r\n                    <span className=\"bar\"></span>\r\n                    \r\n                </div>\r\n                {/*button to apply filter settings and send request to rickAndMortyAPI */}\r\n                <button className=\"buttonApply\" disabled={!this.state.changed} onClick={(e) => {this.props.changeFilter(this.state, e); this.setState({changed: false})}} >Apply</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport {FilterBar};","import React from 'react';\r\n\r\nclass CharModal extends React.Component { //Modal popup window with full charachter info\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { //state for dynamic conditional style set to modal window\r\n          display: false,\r\n        };\r\n\r\n        this.modalOpen = this.modalOpen.bind(this);\r\n        this.modalClose = this.modalClose.bind(this);\r\n    }\r\n    modalOpen(){  //change display set to true to show modal window\r\n        this.setState({\r\n            display: true\r\n        })\r\n    }\r\n    modalClose(){ //change display set to false to hide modal window\r\n        this.setState({\r\n            display: false\r\n        })\r\n    }\r\n    render(){\r\n        let btn_class = this.state.display ? \"modal-show modal\" : \"modal-hide modal\";\r\n        return (\r\n            <div className={btn_class}>\r\n                <div className=\"modal-content\">\r\n                    <div className=\"modal-header\">\r\n                        <span className=\"close\" onClick={this.modalClose} >&times;</span>\r\n                        <h2>{this.props.char.name}</h2>\r\n                    </div>\r\n                    <div className=\"modal-body\">\r\n                        <img src={this.props.char.image} alt=\"\"></img>\r\n                        <p>Status: {this.props.char.status}</p>\r\n                        <p>Species: {this.props.char.species}</p>\r\n                        <p>Type: {this.props.char.type}</p>\r\n                        <p>Gender: {this.props.char.gender}</p>\r\n                        <p>Origin: {this.props.char.origin? this.props.char.origin.name : \"\"}</p>\r\n                        <p>Location: {this.props.char.location? this.props.char.location.name : \"\"}</p>\r\n                    </div>\r\n                    <div className=\"modal-footer\">\r\n                    </div>\r\n                </div>  \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport {CharModal} \r\n  \r\n  ","\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport {CharCardMin} from './components/charCardMin.js'\r\nimport {PaginationModule} from './components/paginationModule.js'\r\nimport {FilterBar} from './components/filterBar.js' \r\nimport {CharModal} from './components/modal.js'\r\n\r\n//component for navigation bar on top of the screen with title and filter bar\r\nclass NavBar extends React.Component { \r\n  constructor(props) {\r\n    super(props)\r\n    this.changeFilter = this.changeFilter.bind(this)\r\n  }\r\n  changeFilter(newFilter, e){\r\n    e.preventDefault();\r\n    this.props.changeFilter(newFilter, e)\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"flex-row navContainer\">\r\n          <div className=\"projectTitle\">Rick and Morty Characters List</div>\r\n          <FilterBar changeFilter = {this.changeFilter} className=\"filterContainer\" />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass MainScreen extends React.Component{ //main block of app with characters list\r\n    constructor(props){\r\n      super(props)\r\n      this.openModal = this.openModal.bind(this);\r\n      this.charModalElement = React.createRef();\r\n      this.state = {charInfo: {}};\r\n    }\r\n    openModal(e, id){//on image click send request to api with character id and opens character popup modal window\r\n      e.preventDefault();\r\n      \r\n      fetch('https://rickandmortyapi.com/api/character/'+id)\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            this.setState({\r\n              charInfo : data\r\n            }, ()=>{\r\n              this.charModalElement.current.modalOpen()\r\n            })\r\n        }); \r\n    }\r\n    render() {\r\n      const cards = this.props.cards;\r\n      \r\n      if(cards.length){\r\n        return (\r\n          <div className=\"cardsContainer\" >\r\n            {cards.map((char) => //creating list of cards\r\n              <CharCardMin openModal={this.openModal} key={char.id} value={char} />\r\n            )}\r\n            {/* Hidden Modal window */}\r\n            <CharModal ref={this.charModalElement} openModal={this.openModal} char={this.state.charInfo}/>\r\n          </div>\r\n        );\r\n      } else{\r\n        //render text if there is no data found on query\r\n        return(\r\n          <div className=\"cardsContainerNoData\" >\r\n            <p className=\"notFound\">{\"Characters not found :(\"}</p>\r\n          </div>\r\n        );\r\n      }\r\n    }\r\n}\r\n\r\nclass App extends React.Component { //Main component which renders to root element\r\n    constructor(props) {\r\n      super(props)\r\n      this.state = {\r\n        currPage: 1, \r\n        cards: this.props.cards, \r\n        lastPage: this.props.lastPage,\r\n        status: undefined,\r\n        species: undefined,\r\n        gender: undefined,\r\n        type: undefined,\r\n        name: undefined,\r\n      };\r\n      this.changePage = this.changePage.bind(this)\r\n      this.getLink = this.getLink.bind(this)\r\n      this.changeFilter = this.changeFilter.bind(this)\r\n    }\r\n    //when page clicked on pagination bar this function called\r\n    changePage(newPage,e) {\r\n      e.preventDefault();\r\n      if(newPage !== this.state.currPage){\r\n        this.getLink(newPage)\r\n      }\r\n    }\r\n    //when filter applied this function called\r\n    changeFilter(newFilter, e){\r\n      e.preventDefault();\r\n      delete newFilter['changed'];\r\n      newFilter['currPage'] = 1;\r\n      this.setState(newFilter, ()=>{\r\n        this.getLink(this.state.currPage)\r\n      })\r\n    }\r\n    //after filter applied or page chosen send request to rick and morty api and render character cards\r\n    getLink(newPage){\r\n      console.log(this.state)\r\n      let link = 'https://rickandmortyapi.com/api/character/?page='+newPage\r\n      if(this.state.status){\r\n        link=link +'&status='+this.state.status\r\n      }\r\n      if(this.state.species){\r\n        link= link +'&species='+this.state.species\r\n      }\r\n      if(this.state.gender){\r\n        link= link +'&gender='+this.state.gender\r\n      }\r\n      if(this.state.type){\r\n        link= link +'&type='+this.state.type\r\n      }\r\n      if(this.state.name){\r\n        link= link +'&name='+this.state.name\r\n      }\r\n      console.log(link)\r\n        fetch(link)\r\n        .then(response => response.json())\r\n        .then(data => {\r\n          if(!data.error){\r\n            this.setState({\r\n              cards : data.results,\r\n              currPage : newPage,\r\n              lastPage : data.info.pages\r\n            })\r\n          } else {\r\n            this.setState({\r\n              cards : [],\r\n              currPage : 1,\r\n              lastPage : 1\r\n            })\r\n          }\r\n        }); \r\n    }\r\n    render() {\r\n      let cards = this.state.cards;\r\n      let currPage = this.state.currPage;\r\n      let lastPage = this.state.lastPage;\r\n      return (\r\n        <div className=\"appContainer\">\r\n            <NavBar changeFilter = {this.changeFilter} />\r\n            <MainScreen className=\"mainContainer\" cards={cards} currPage={currPage} />\r\n            <PaginationModule changePage = {this.changePage} lastPage={lastPage} currPage={currPage} />\r\n        </div>\r\n      );\r\n    }\r\n    \r\n}\r\n\r\n//initial request to api to get first page of characters and mount react app to root element\r\nfetch('https://rickandmortyapi.com/api/character/?page=1')\r\n        .then(response => response.json())\r\n        .then(data => {\r\n          console.log(data)\r\n          ReactDOM.render(\r\n            <App cards={data.results} lastPage={data.info.pages}/>,\r\n            document.getElementById('root')\r\n          );\r\n        });  \r\n\r\n  "],"sourceRoot":""}